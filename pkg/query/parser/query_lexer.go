// Generated from /Users/i355594/go/src/github.com/Peripli/service-manager/pkg/query/Query.g4 by ANTLR 4.7.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 12, 246,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 4, 33, 9, 33,
	4, 34, 9, 34, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 5, 2, 77, 10, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5, 3, 101,
	10, 3, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 5,
	5, 5, 114, 10, 5, 3, 6, 3, 6, 3, 6, 5, 6, 119, 10, 6, 3, 7, 6, 7, 122,
	10, 7, 13, 7, 14, 7, 123, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 10,
	3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 3, 10, 5, 10, 139, 10, 10, 3, 11, 3,
	11, 3, 11, 3, 11, 3, 11, 3, 11, 7, 11, 147, 10, 11, 12, 11, 14, 11, 150,
	11, 11, 3, 11, 3, 11, 3, 12, 3, 12, 3, 12, 3, 12, 3, 12, 3, 13, 3, 13,
	3, 13, 3, 14, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3, 16, 3, 17, 3,
	17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 19, 3, 19, 6, 19, 178, 10, 19, 13, 19,
	14, 19, 179, 3, 20, 3, 20, 3, 20, 3, 20, 3, 20, 3, 21, 3, 21, 5, 21, 189,
	10, 21, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 3, 22, 5, 22, 197, 10, 22, 3,
	23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 23, 3, 24, 3, 24, 3, 24, 3, 25, 3, 25,
	3, 25, 3, 25, 3, 26, 3, 26, 3, 26, 3, 27, 3, 27, 3, 27, 3, 28, 3, 28, 3,
	28, 3, 29, 5, 29, 222, 10, 29, 3, 29, 3, 29, 3, 29, 5, 29, 227, 10, 29,
	3, 30, 3, 30, 3, 31, 6, 31, 232, 10, 31, 13, 31, 14, 31, 233, 3, 32, 3,
	32, 3, 33, 3, 33, 3, 34, 6, 34, 241, 10, 34, 13, 34, 14, 34, 242, 3, 34,
	3, 34, 2, 2, 35, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13, 8, 15, 9, 17, 10, 19,
	2, 21, 2, 23, 2, 25, 2, 27, 2, 29, 2, 31, 2, 33, 2, 35, 2, 37, 2, 39, 2,
	41, 2, 43, 2, 45, 2, 47, 2, 49, 2, 51, 2, 53, 2, 55, 2, 57, 2, 59, 2, 61,
	2, 63, 2, 65, 11, 67, 12, 3, 2, 8, 8, 2, 47, 47, 49, 59, 67, 92, 94, 94,
	97, 97, 99, 124, 4, 2, 41, 41, 94, 94, 4, 2, 86, 86, 118, 118, 4, 2, 45,
	45, 47, 47, 3, 2, 50, 59, 5, 2, 11, 12, 15, 15, 34, 34, 2, 246, 2, 3, 3,
	2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3,
	2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 65,
	3, 2, 2, 2, 2, 67, 3, 2, 2, 2, 3, 76, 3, 2, 2, 2, 5, 100, 3, 2, 2, 2, 7,
	102, 3, 2, 2, 2, 9, 113, 3, 2, 2, 2, 11, 118, 3, 2, 2, 2, 13, 121, 3, 2,
	2, 2, 15, 125, 3, 2, 2, 2, 17, 127, 3, 2, 2, 2, 19, 138, 3, 2, 2, 2, 21,
	140, 3, 2, 2, 2, 23, 153, 3, 2, 2, 2, 25, 158, 3, 2, 2, 2, 27, 161, 3,
	2, 2, 2, 29, 164, 3, 2, 2, 2, 31, 166, 3, 2, 2, 2, 33, 169, 3, 2, 2, 2,
	35, 172, 3, 2, 2, 2, 37, 175, 3, 2, 2, 2, 39, 181, 3, 2, 2, 2, 41, 188,
	3, 2, 2, 2, 43, 190, 3, 2, 2, 2, 45, 198, 3, 2, 2, 2, 47, 204, 3, 2, 2,
	2, 49, 207, 3, 2, 2, 2, 51, 211, 3, 2, 2, 2, 53, 214, 3, 2, 2, 2, 55, 217,
	3, 2, 2, 2, 57, 221, 3, 2, 2, 2, 59, 228, 3, 2, 2, 2, 61, 231, 3, 2, 2,
	2, 63, 235, 3, 2, 2, 2, 65, 237, 3, 2, 2, 2, 67, 240, 3, 2, 2, 2, 69, 70,
	7, 107, 2, 2, 70, 77, 7, 112, 2, 2, 71, 72, 7, 112, 2, 2, 72, 73, 7, 113,
	2, 2, 73, 74, 7, 118, 2, 2, 74, 75, 7, 107, 2, 2, 75, 77, 7, 112, 2, 2,
	76, 69, 3, 2, 2, 2, 76, 71, 3, 2, 2, 2, 77, 4, 3, 2, 2, 2, 78, 79, 7, 103,
	2, 2, 79, 101, 7, 115, 2, 2, 80, 81, 7, 112, 2, 2, 81, 101, 7, 103, 2,
	2, 82, 83, 7, 105, 2, 2, 83, 101, 7, 118, 2, 2, 84, 85, 7, 110, 2, 2, 85,
	101, 7, 118, 2, 2, 86, 87, 7, 105, 2, 2, 87, 101, 7, 103, 2, 2, 88, 89,
	7, 110, 2, 2, 89, 101, 7, 103, 2, 2, 90, 91, 7, 103, 2, 2, 91, 101, 7,
	112, 2, 2, 92, 93, 7, 101, 2, 2, 93, 94, 7, 113, 2, 2, 94, 95, 7, 112,
	2, 2, 95, 96, 7, 118, 2, 2, 96, 97, 7, 99, 2, 2, 97, 98, 7, 107, 2, 2,
	98, 99, 7, 112, 2, 2, 99, 101, 7, 117, 2, 2, 100, 78, 3, 2, 2, 2, 100,
	80, 3, 2, 2, 2, 100, 82, 3, 2, 2, 2, 100, 84, 3, 2, 2, 2, 100, 86, 3, 2,
	2, 2, 100, 88, 3, 2, 2, 2, 100, 90, 3, 2, 2, 2, 100, 92, 3, 2, 2, 2, 101,
	6, 3, 2, 2, 2, 102, 103, 5, 65, 33, 2, 103, 104, 7, 99, 2, 2, 104, 105,
	7, 112, 2, 2, 105, 106, 7, 102, 2, 2, 106, 107, 3, 2, 2, 2, 107, 108, 5,
	65, 33, 2, 108, 8, 3, 2, 2, 2, 109, 114, 5, 21, 11, 2, 110, 114, 5, 57,
	29, 2, 111, 114, 5, 19, 10, 2, 112, 114, 5, 49, 25, 2, 113, 109, 3, 2,
	2, 2, 113, 110, 3, 2, 2, 2, 113, 111, 3, 2, 2, 2, 113, 112, 3, 2, 2, 2,
	114, 10, 3, 2, 2, 2, 115, 119, 7, 46, 2, 2, 116, 117, 7, 46, 2, 2, 117,
	119, 7, 34, 2, 2, 118, 115, 3, 2, 2, 2, 118, 116, 3, 2, 2, 2, 119, 12,
	3, 2, 2, 2, 120, 122, 9, 2, 2, 2, 121, 120, 3, 2, 2, 2, 122, 123, 3, 2,
	2, 2, 123, 121, 3, 2, 2, 2, 123, 124, 3, 2, 2, 2, 124, 14, 3, 2, 2, 2,
	125, 126, 7, 42, 2, 2, 126, 16, 3, 2, 2, 2, 127, 128, 7, 43, 2, 2, 128,
	18, 3, 2, 2, 2, 129, 130, 7, 118, 2, 2, 130, 131, 7, 116, 2, 2, 131, 132,
	7, 119, 2, 2, 132, 139, 7, 103, 2, 2, 133, 134, 7, 104, 2, 2, 134, 135,
	7, 99, 2, 2, 135, 136, 7, 110, 2, 2, 136, 137, 7, 117, 2, 2, 137, 139,
	7, 103, 2, 2, 138, 129, 3, 2, 2, 2, 138, 133, 3, 2, 2, 2, 139, 20, 3, 2,
	2, 2, 140, 148, 7, 41, 2, 2, 141, 142, 7, 94, 2, 2, 142, 147, 11, 2, 2,
	2, 143, 144, 7, 41, 2, 2, 144, 147, 7, 41, 2, 2, 145, 147, 10, 3, 2, 2,
	146, 141, 3, 2, 2, 2, 146, 143, 3, 2, 2, 2, 146, 145, 3, 2, 2, 2, 147,
	150, 3, 2, 2, 2, 148, 146, 3, 2, 2, 2, 148, 149, 3, 2, 2, 2, 149, 151,
	3, 2, 2, 2, 150, 148, 3, 2, 2, 2, 151, 152, 7, 41, 2, 2, 152, 22, 3, 2,
	2, 2, 153, 154, 5, 61, 31, 2, 154, 155, 5, 61, 31, 2, 155, 156, 5, 61,
	31, 2, 156, 157, 5, 61, 31, 2, 157, 24, 3, 2, 2, 2, 158, 159, 5, 61, 31,
	2, 159, 160, 5, 61, 31, 2, 160, 26, 3, 2, 2, 2, 161, 162, 5, 61, 31, 2,
	162, 163, 5, 61, 31, 2, 163, 28, 3, 2, 2, 2, 164, 165, 9, 4, 2, 2, 165,
	30, 3, 2, 2, 2, 166, 167, 5, 61, 31, 2, 167, 168, 5, 61, 31, 2, 168, 32,
	3, 2, 2, 2, 169, 170, 5, 61, 31, 2, 170, 171, 5, 61, 31, 2, 171, 34, 3,
	2, 2, 2, 172, 173, 5, 61, 31, 2, 173, 174, 5, 61, 31, 2, 174, 36, 3, 2,
	2, 2, 175, 177, 7, 48, 2, 2, 176, 178, 5, 61, 31, 2, 177, 176, 3, 2, 2,
	2, 178, 179, 3, 2, 2, 2, 179, 177, 3, 2, 2, 2, 179, 180, 3, 2, 2, 2, 180,
	38, 3, 2, 2, 2, 181, 182, 9, 5, 2, 2, 182, 183, 5, 31, 16, 2, 183, 184,
	7, 60, 2, 2, 184, 185, 5, 33, 17, 2, 185, 40, 3, 2, 2, 2, 186, 189, 7,
	92, 2, 2, 187, 189, 5, 39, 20, 2, 188, 186, 3, 2, 2, 2, 188, 187, 3, 2,
	2, 2, 189, 42, 3, 2, 2, 2, 190, 191, 5, 31, 16, 2, 191, 192, 7, 60, 2,
	2, 192, 193, 5, 33, 17, 2, 193, 194, 7, 60, 2, 2, 194, 196, 5, 35, 18,
	2, 195, 197, 5, 37, 19, 2, 196, 195, 3, 2, 2, 2, 196, 197, 3, 2, 2, 2,
	197, 44, 3, 2, 2, 2, 198, 199, 5, 23, 12, 2, 199, 200, 7, 47, 2, 2, 200,
	201, 5, 25, 13, 2, 201, 202, 7, 47, 2, 2, 202, 203, 5, 27, 14, 2, 203,
	46, 3, 2, 2, 2, 204, 205, 5, 43, 22, 2, 205, 206, 5, 41, 21, 2, 206, 48,
	3, 2, 2, 2, 207, 208, 5, 45, 23, 2, 208, 209, 5, 29, 15, 2, 209, 210, 5,
	47, 24, 2, 210, 50, 3, 2, 2, 2, 211, 212, 5, 53, 27, 2, 212, 213, 5, 61,
	31, 2, 213, 52, 3, 2, 2, 2, 214, 215, 5, 55, 28, 2, 215, 216, 5, 55, 28,
	2, 216, 54, 3, 2, 2, 2, 217, 218, 5, 61, 31, 2, 218, 219, 5, 61, 31, 2,
	219, 56, 3, 2, 2, 2, 220, 222, 5, 59, 30, 2, 221, 220, 3, 2, 2, 2, 221,
	222, 3, 2, 2, 2, 222, 223, 3, 2, 2, 2, 223, 226, 5, 61, 31, 2, 224, 225,
	7, 48, 2, 2, 225, 227, 5, 61, 31, 2, 226, 224, 3, 2, 2, 2, 226, 227, 3,
	2, 2, 2, 227, 58, 3, 2, 2, 2, 228, 229, 9, 5, 2, 2, 229, 60, 3, 2, 2, 2,
	230, 232, 5, 63, 32, 2, 231, 230, 3, 2, 2, 2, 232, 233, 3, 2, 2, 2, 233,
	231, 3, 2, 2, 2, 233, 234, 3, 2, 2, 2, 234, 62, 3, 2, 2, 2, 235, 236, 9,
	6, 2, 2, 236, 64, 3, 2, 2, 2, 237, 238, 7, 34, 2, 2, 238, 66, 3, 2, 2,
	2, 239, 241, 9, 7, 2, 2, 240, 239, 3, 2, 2, 2, 241, 242, 3, 2, 2, 2, 242,
	240, 3, 2, 2, 2, 242, 243, 3, 2, 2, 2, 243, 244, 3, 2, 2, 2, 244, 245,
	8, 34, 2, 2, 245, 68, 3, 2, 2, 2, 18, 2, 76, 100, 113, 118, 123, 138, 146,
	148, 179, 188, 196, 221, 226, 233, 242, 3, 8, 2, 2,
}

var lexerDeserializer = antlr.NewATNDeserializer(nil)
var lexerAtn = lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "", "", "", "", "", "", "'('", "')'", "' '",
}

var lexerSymbolicNames = []string{
	"", "MultiOp", "UniOp", "Concat", "Value", "ValueSeparator", "Key", "OpenBracket",
	"CloseBracket", "Whitespace", "WS",
}

var lexerRuleNames = []string{
	"MultiOp", "UniOp", "Concat", "Value", "ValueSeparator", "Key", "OpenBracket",
	"CloseBracket", "BOOLEAN", "STRING", "YEAR", "MONTH", "DAY", "DELIM", "HOUR",
	"MINUTE", "SECOND", "SECFRAC", "NUMOFFSET", "OFFSET", "PARTIAL_TIME", "FULL_DATE",
	"FULL_TIME", "DATETIME", "FIVE_DIGITS", "FOUR_DIGITS", "TWO_DIGITS", "NUMBER",
	"SIGN", "DIGIT", "INTEGER", "Whitespace", "WS",
}

type QueryLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

var lexerDecisionToDFA = make([]*antlr.DFA, len(lexerAtn.DecisionToState))

func init() {
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
}

func NewQueryLexer(input antlr.CharStream) *QueryLexer {

	l := new(QueryLexer)

	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Query.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// QueryLexer tokens.
const (
	QueryLexerMultiOp        = 1
	QueryLexerUniOp          = 2
	QueryLexerConcat         = 3
	QueryLexerValue          = 4
	QueryLexerValueSeparator = 5
	QueryLexerKey            = 6
	QueryLexerOpenBracket    = 7
	QueryLexerCloseBracket   = 8
	QueryLexerWhitespace     = 9
	QueryLexerWS             = 10
)
